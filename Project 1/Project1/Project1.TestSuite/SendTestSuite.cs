//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project1.TestSuite {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3130.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SendTestSuite : VsTestClassBase {
        
        public SendTestSuite() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Test Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize() {
            this.InitializeTestManager();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestCleanup() {
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void SendTestSuiteS0() {
            this.Manager.BeginTest("SendTestSuiteS0");
            this.Manager.Comment("reaching state \'S0\'");
            this.Manager.Comment("executing step \'call AdapterSendWriteRequest()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendWriteRequest();
            this.Manager.Comment("reaching state \'S1\'");
            this.Manager.Comment("checking step \'return AdapterSendWriteRequest\'");
            this.Manager.Comment("reaching state \'S4\'");
            this.Manager.Comment("executing step \'call AdapterReceiveACK()\'");
            Project1.TestAdapter.AdapterClass.AdapterReceiveACK();
            this.Manager.Comment("reaching state \'S6\'");
            this.Manager.Comment("checking step \'return AdapterReceiveACK\'");
            this.Manager.Comment("reaching state \'S8\'");
            this.Manager.Comment("executing step \'call AdapterSendDataBlock()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendDataBlock();
            this.Manager.Comment("reaching state \'S10\'");
            this.Manager.Comment("checking step \'return AdapterSendDataBlock\'");
            this.Manager.Comment("reaching state \'S12\'");
            this.Manager.Comment("executing step \'call AdapterReceiveACK()\'");
            Project1.TestAdapter.AdapterClass.AdapterReceiveACK();
            this.Manager.Comment("reaching state \'S14\'");
            this.Manager.Comment("checking step \'return AdapterReceiveACK\'");
            this.Manager.Comment("reaching state \'S16\'");
            this.Manager.Comment("executing step \'call AdapterSendDataBlock()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendDataBlock();
            this.Manager.Comment("reaching state \'S18\'");
            this.Manager.Comment("checking step \'return AdapterSendDataBlock\'");
            this.Manager.Comment("reaching state \'S20\'");
            bool temp0;
            this.Manager.Comment("executing step \'call AdapterCanPutExit(510)\'");
            temp0 = Project1.TestAdapter.AdapterClass.AdapterCanPutExit(510);
            this.Manager.Comment("reaching state \'S22\'");
            this.Manager.Comment("checking step \'return AdapterCanPutExit/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp0, "return of AdapterCanPutExit, state S22");
            this.Manager.Comment("reaching state \'S24\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void SendTestSuiteS2() {
            this.Manager.BeginTest("SendTestSuiteS2");
            this.Manager.Comment("reaching state \'S2\'");
            this.Manager.Comment("executing step \'call AdapterSendWriteRequest()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendWriteRequest();
            this.Manager.Comment("reaching state \'S3\'");
            this.Manager.Comment("checking step \'return AdapterSendWriteRequest\'");
            this.Manager.Comment("reaching state \'S5\'");
            this.Manager.Comment("executing step \'call AdapterReceiveACK()\'");
            Project1.TestAdapter.AdapterClass.AdapterReceiveACK();
            this.Manager.Comment("reaching state \'S7\'");
            this.Manager.Comment("checking step \'return AdapterReceiveACK\'");
            this.Manager.Comment("reaching state \'S9\'");
            this.Manager.Comment("executing step \'call AdapterSendDataBlock()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendDataBlock();
            this.Manager.Comment("reaching state \'S11\'");
            this.Manager.Comment("checking step \'return AdapterSendDataBlock\'");
            this.Manager.Comment("reaching state \'S13\'");
            this.Manager.Comment("executing step \'call AdapterReceiveACK()\'");
            Project1.TestAdapter.AdapterClass.AdapterReceiveACK();
            this.Manager.Comment("reaching state \'S15\'");
            this.Manager.Comment("checking step \'return AdapterReceiveACK\'");
            this.Manager.Comment("reaching state \'S17\'");
            this.Manager.Comment("executing step \'call AdapterSendDataBlock()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendDataBlock();
            this.Manager.Comment("reaching state \'S19\'");
            this.Manager.Comment("checking step \'return AdapterSendDataBlock\'");
            this.Manager.Comment("reaching state \'S21\'");
            bool temp1;
            this.Manager.Comment("executing step \'call AdapterCanPutExit(520)\'");
            temp1 = Project1.TestAdapter.AdapterClass.AdapterCanPutExit(520);
            this.Manager.Comment("reaching state \'S23\'");
            this.Manager.Comment("checking step \'return AdapterCanPutExit/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp1, "return of AdapterCanPutExit, state S23");
            this.Manager.Comment("reaching state \'S25\'");
            this.Manager.Comment("executing step \'call AdapterReceiveACK()\'");
            Project1.TestAdapter.AdapterClass.AdapterReceiveACK();
            this.Manager.Comment("reaching state \'S26\'");
            this.Manager.Comment("checking step \'return AdapterReceiveACK\'");
            this.Manager.Comment("reaching state \'S27\'");
            this.Manager.Comment("executing step \'call AdapterSendDataBlock()\'");
            Project1.TestAdapter.AdapterClass.AdapterSendDataBlock();
            this.Manager.Comment("reaching state \'S28\'");
            this.Manager.Comment("checking step \'return AdapterSendDataBlock\'");
            this.Manager.Comment("reaching state \'S29\'");
            bool temp2;
            this.Manager.Comment("executing step \'call AdapterCanPutExit(510)\'");
            temp2 = Project1.TestAdapter.AdapterClass.AdapterCanPutExit(510);
            this.Manager.Comment("reaching state \'S30\'");
            this.Manager.Comment("checking step \'return AdapterCanPutExit/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp2, "return of AdapterCanPutExit, state S30");
            this.Manager.Comment("reaching state \'S31\'");
            this.Manager.EndTest();
        }
        #endregion
    }
}
